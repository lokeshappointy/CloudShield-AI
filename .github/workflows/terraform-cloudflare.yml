name: Terraform Cloudflare CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'cloudflare/**'
      - '.github/workflows/terraform-cloudflare.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'cloudflare/**'
      - '.github/workflows/terraform-cloudflare.yml'

permissions:
  contents: read
  pull-requests: write

defaults:
  run:
    working-directory: ./cloudflare

jobs:
  terraform_cloudflare_plan_apply:
    name: Terraform Cloudflare Plan & Apply
    if: github.actor != 'dependabot[bot]' && (!contains(github.event.head_commit.message, '[skip ci]')) && (!contains(github.event.head_commit.message, '[skip cloudflare]'))
    runs-on: ubuntu-latest

    env:
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      # GOOGLE_APPLICATION_CREDENTIALS will be set by the auth step

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Authenticate to Google Cloud using SA JSON Key
      - name: Authenticate to Google Cloud (for GCS Backend)
        id: 'auth_gcs'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_JSON }}' # Use the secret holding the SA key

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.0" # Or your chosen version

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        # Terraform GCS backend will use credentials sourced by google-github-actions/auth
        # (which sets GOOGLE_APPLICATION_CREDENTIALS env var implicitly)

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=tfplan_cf
        continue-on-error: true 

      - name: Terraform Apply
        if: |
          github.ref == 'refs/heads/main' && 
          github.event_name == 'push' && 
          steps.plan.outcome == 'success' && 
          steps.validate.outcome == 'success' &&
          steps.plan.outputs.exitcode == '2'
        run: terraform apply -auto-approve -input=false tfplan_cf